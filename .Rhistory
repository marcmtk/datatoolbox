?strp
??strp
df <- read.csv(vector)
vec <- c("200.csv", "301.csv")
df <- read.csv(vec)
setwd("~/Dropbox/Programmering/R/datatoolbox/R programming, assignment 1")
setwd("~/Dropbox/Programmering/R/datatoolbox")
directory <- "./R programming, assignment 1/specdata/"
list.files(directory)
dfs <- lapply(vec, function(x) read.csv(x, header=T))
dfs <- lapply(vec, function(x) read.csv(paste(directory,x), header=T))
dfs <- lapply(vec, function(x) read.csv(paste(directory,x,sep=""), header=T))
dfs
View(dfs)
str(dfs)
df <- merge(dfs)
df <- rbind(dfs)
df
df <- as.data.frame(rbind(dfs))
df
View(df)
df <- data.frame(dfs)
View(df)
?paste
?do.call
do.call(lapply, dfs)
str(dfs)
df <- lapply(dfs, rbind)
str(df)
df <- lapply(dfs, merge)
?merge
str(data.frame(dfs)
)
str(data.frame(dfs, check.names=T))
df <- merge(dfs[1], dfs[2])
View(df)
dfs[1]
str(dfs[1])
str(dfs[[1]])
df <- merge(dfs[[1]], dfs[[2]])
df1 <- dfs[[1]]
df2 <- dfs[[2]]
df <- merge(df1, df2)
df <- rbind(df1, df2)
3652*2
as.vector(dfs)
str(as.vector(dfs))
do.call("rbind", dfs)
df <- do.call("rbind", dfs)
rm(df)
df <- do.call("rbind", dfs)
pollutantmean <- function(directory, pollutant, id = 1:332) {
dfs <- lapply(vec, function(x) read.csv(paste(directory,id,".csv" sep=""), header=T))
df <- do.call("rbind", dfs)
columnmean(df[pollutant], na.rm=T)
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
}
pollutantmean(directory, "nitrate")
pollutantmean <- function(directory, pollutant, id = 1:332) {
dfs <- lapply(vec, function(x) read.csv(paste(directory,id,".csv" sep=""), header=T))
df <- do.call("rbind", dfs)
colMeans(df[pollutant], na.rm=T)
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
}
pollutantmean(directory, "nitrate")
pollutantmean <- function(directory, pollutant, id = 1:332) {
dfs <- lapply(vec, function(x) read.csv(paste(directory,id,".csv" sep=""), header=T))
df <- do.call("rbind", dfs)
colMeans(df[pollutant], na.rm=T)
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
dfs <- lapply(id, function(x) read.csv(paste(directory,id,".csv" sep=""), header=T))
df <- do.call("rbind", dfs)
colMeans(df[pollutant], na.rm=T)
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
dfs <- lapply(id, function(x) read.csv(paste(directory,id,".csv" sep=""), header=T))
pollutantmean <- function(directory, pollutant, id = 1:332) {
dfs <- lapply(id, function(x) read.csv(paste(directory,id,".csv", sep=""), header=T))
df <- do.call("rbind", dfs)
colMeans(df[pollutant], na.rm=T)
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
}
pollutantmean(directory, "nitrate")
directory <- "./R programming, assignment 1/specdata/"
id <- 1:332
id <- 1:331
id <- 2:331
id <- 1:331
dfs <- lapply(id, function(x) read.csv(paste(directory,id,".csv", sep=""), header=T))
read.csv(paste(directory,id,".csv", sep="")
)
paste(directory,id,".csv", sep="")
dfs <- lapply(id, function(x) read.csv(paste(directory,x,".csv", sep=""), header=T))
formatC(1, width = 6, format = "d", flag = "0")
formatC(1, width = 3, format = "d", flag = "0")
formatC(3, width = 3, format = "d", flag = "0")
formatC(103, width = 3, format = "d", flag = "0")
id <- formatC(id, width = 3, format = "d", flag = "0")
dfs <- lapply(id, function(x) read.csv(paste(directory,x,".csv", sep=""), header=T))
df <- do.call("rbind", dfs)
colMeans(df[pollutant], na.rm=T)
pollutantmean <- function(directory, pollutant, id = 1:332) {
id <- formatC(id, width = 3, format = "d", flag = "0")
dfs <- lapply(id, function(x) read.csv(paste(directory,x,".csv", sep=""), header=T))
df <- do.call("rbind", dfs)
colMeans(df[pollutant], na.rm=T)
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
}
pollutantmean(directory, "nitrate")
pollutantmean(directory, "nitrate", 23)
pollutantmean(directory, "nitrate", 70:72)
pollutantmean(directory, "sulfate", 1:10)
?complete.cases
id = 1:332
directory <- "./R programming, assignment 1/specdata/"
id <- formatC(id, width = 3, format = "d", flag = "0")
df <- data.frame(id, nobs)
id
str(id)
df <- data.frame(id, "nobs")
View(df)
df <- data.frame(id)
View(df)
df[,nobs] <- sapply(df$id, function(x) complete.cases(read.csv(paste(directory,x,".csv", sep=""), header=T)))
nobs <- sapply(df$id, function(x) complete.cases(read.csv(paste(directory,x,".csv", sep=""), header=T)))
nobs <- sapply(df$id, function(x) sum(complete.cases(read.csv(paste(directory,x,".csv", sep=""), header=T))))
df <- cbind(df, nobs)
View(df)
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
id <- formatC(id, width = 3, format = "d", flag = "0")
df <- data.frame(id)
nobs <- sapply(df$id, function(x) sum(complete.cases(read.csv(paste(directory,x,".csv", sep=""), header=T))))
df <- cbind(df, nobs)
df <- do.call("rbind", dfs)
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
}
complete("specdata", 1)
setwd("~/Dropbox/Programmering/R/datatoolbox/R programming, assignment 1")
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
id <- formatC(id, width = 3, format = "d", flag = "0")
df <- data.frame(id)
nobs <- sapply(df$id, function(x) sum(complete.cases(read.csv(paste(directory,"/",x,".csv", sep=""), header=T))))
df <- cbind(df, nobs)
df <- do.call("rbind", dfs)
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
}
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
id <- formatC(id, width = 3, format = "d", flag = "0")
df <- data.frame(id)
nobs <- sapply(df$id, function(x) sum(complete.cases(read.csv(paste(directory,"/",x,".csv", sep=""), header=T))))
df <- cbind(df, nobs)
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
}
complete("specdata", 1)
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
id <- formatC(id, width = 3, format = "d", flag = "0")
df <- data.frame(id)
nobs <- sapply(df$id, function(x) sum(complete.cases(read.csv(paste(directory,"/",x,".csv", sep=""), header=T))))
df <- cbind(df, nobs)
df
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
}
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
ids <- formatC(id, width = 3, format = "d", flag = "0")
df <- data.frame(id)
nobs <- sapply(ids, function(x) sum(complete.cases(read.csv(paste(directory,"/",x,".csv", sep=""), header=T))))
df <- cbind(df, nobs)
df
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
}
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
ls <- list.files(directory)
directory <- "specdata"
ls <- list.files(directory)
directory <- "specdata"
ls <- list.files(directory)
dfs <- lapply(ls, function(x) read.csv(paste(directory,"/",x, sep=""), header=T))
df <- do.call("rbind", dfs)
str(d)
str(df)
range(df$ID)
?tapply
df2 <- tapply(df, df$ID, function(x) sum(complete.cases(x)))
dfss <- split(df, df$ID)
df <- do.call("rbind", dfss)
str(dfss)
nobs <- lapply(dfs, function(x) sum(complete.cases(x)))
str(nobs)
nobs <- sapply(dfs, function(x) sum(complete.cases(x)))
1 %in% c(1,2,3,4)
1 %in% c(2,3,4)
good <- threshold < nobs
threshold = 0
good <- threshold < nobs
threshold = 200
good <- threshold < nobs
levels(as.factor(df$ID))
df$ID <- as.factor(df$ID)
good <- threshold < nobs
levels(df$ID)
goodID <- levels(df$ID)[good]
sum(good)
df2 <- subset(df, ID %in% goodID)
View(df2)
levels(df2$ID)
str(levels(df2$ID))
?cor
cor(df2$nitrate, df2$sulfate)
cor(df2$nitrate, df2$sulfate, na.rm=T)
cor(df2$nitrate, df2$sulfate, use=complete.obs)
cor(df2$nitrate, df2$sulfate, use="complete.obs")
?f
?gf
?gl
head(df2$ID)
levels(df2$ID)
?refactor
??refactor
df2$ID <- as.factor(df2$ID)
levels(df2$ID)
tapply(df2, ID, function(x) cor(x[nitrate], x[sulfate], use="complete.obs"))
tapply(df2, df2$ID, function(x) cor(x[nitrate], x[sulfate], use="complete.obs"))
?tapply
?mapply
?tapply
s <- split(df2, df2$ID)
corrs <- lapply(s, function(x) cor(x["sulfate"], x["nitrate"]))
head(corrs)
corrs <- lapply(s, function(x) cor(x["sulfate"], x["nitrate"], use=complete.obs))
corrs <- lapply(s, function(x) cor(x["sulfate"], x["nitrate"], use="complete.obs"))
str(s)
corrs <- lapply(s, function(x) cor(x["sulfate"], x["nitrate"], use="complete.obs"))
range(nobs)
corrs <- lapply(s, function(x) cor(x["sulfate"], x["nitrate"], use="na.or.complete.obs"))
corrs <- lapply(s, function(x) cor(x["sulfate"], x["nitrate"], use="na.or.complete"))
head(corrs)
nobs[1]
s[1]
s[2]
sum(complete.cases(s[2]))
sum(complete.cases(s[[2]]))
sum(complete.cases(s[[1]]))
sum(complete.cases(s[[3]]))
directory <- "specdata"
threshold <- 0
ls <- list.files(directory)
dfs <- lapply(ls, function(x) read.csv(paste(directory,"/",x, sep=""), header=T))
nobs <- sapply(dfs, function(x) sum(complete.cases(x)))
df <- do.call("rbind", dfs)
good <- threshold < nobs
goodID <- levels(as.factor(df$ID))[good]
df2 <- subset(df, ID %in% goodID)
s <- split(df2, df2$ID)
corrs <- lapply(s, function(x) cor(x["sulfate"], x["nitrate"], use="na.or.complete"))
head(corrs)
sum(complete.cases(s[[1]]))
sum(complete.cases(s[[2]]))
sum(complete.cases(s[[3]]))
sum(complete.cases(s[[4]]))
corr <- function(directory, threshold = 0) {
ls <- list.files(directory)
dfs <- lapply(ls, function(x) read.csv(paste(directory,"/",x, sep=""), header=T))
nobs <- sapply(dfs, function(x) sum(complete.cases(x)))
df <- do.call("rbind", dfs)
good <- threshold < nobs
goodID <- levels(as.factor(df$ID))[good]
df2 <- subset(df, ID %in% goodID)
s <- split(df2, df2$ID)
corrs <- lapply(s, function(x) cor(x["sulfate"], x["nitrate"], use="na.or.complete"))
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
ls <- list.files(directory)
dfs <- lapply(ls, function(x) read.csv(paste(directory,"/",x, sep=""), header=T))
nobs <- sapply(dfs, function(x) sum(complete.cases(x)))
df <- do.call("rbind", dfs)
good <- threshold < nobs
goodID <- levels(as.factor(df$ID))[good]
df2 <- subset(df, ID %in% goodID)
s <- split(df2, df2$ID)
corrs <- sapply(s, function(x) cor(x["sulfate"], x["nitrate"], use="na.or.complete"))
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
}
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
corr <- function(directory, threshold = 0) {
ls <- list.files(directory)
dfs <- lapply(ls, function(x) read.csv(paste(directory,"/",x, sep=""), header=T))
nobs <- sapply(dfs, function(x) sum(complete.cases(x)))
df <- do.call("rbind", dfs)
good <- threshold < nobs
if(length(good) == 0) return(0)
goodID <- levels(as.factor(df$ID))[good]
df2 <- subset(df, ID %in% goodID)
s <- split(df2, df2$ID)
corrs <- sapply(s, function(x) cor(x["sulfate"], x["nitrate"], use="na.or.complete"))
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
}
cr <- corr("specdata", 5000)
summary(cr)
directory <- "specdata"
threshold <- 5000
ls <- list.files(directory)
dfs <- lapply(ls, function(x) read.csv(paste(directory,"/",x, sep=""), header=T))
nobs <- sapply(dfs, function(x) sum(complete.cases(x)))
df <- do.call("rbind", dfs)
good <- threshold < nobs
length(good)
length(good)
head(good)
sum(good)
corr <- function(directory, threshold = 0) {
ls <- list.files(directory)
dfs <- lapply(ls, function(x) read.csv(paste(directory,"/",x, sep=""), header=T))
nobs <- sapply(dfs, function(x) sum(complete.cases(x)))
df <- do.call("rbind", dfs)
good <- threshold < nobs
if(sum(good) == 0) return(0)
goodID <- levels(as.factor(df$ID))[good]
df2 <- subset(df, ID %in% goodID)
s <- split(df2, df2$ID)
corrs <- sapply(s, function(x) cor(x["sulfate"], x["nitrate"], use="na.or.complete"))
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
}
good <- threshold < nobs
if(sum(good) == 0) return(0)
cr <- corr("specdata", 5000)
summary(cr)
numeric()
summary(numeric())
corr <- function(directory, threshold = 0) {
ls <- list.files(directory)
dfs <- lapply(ls, function(x) read.csv(paste(directory,"/",x, sep=""), header=T))
nobs <- sapply(dfs, function(x) sum(complete.cases(x)))
df <- do.call("rbind", dfs)
good <- threshold < nobs
if(sum(good) == 0) return(numeric())
goodID <- levels(as.factor(df$ID))[good]
df2 <- subset(df, ID %in% goodID)
s <- split(df2, df2$ID)
corrs <- sapply(s, function(x) cor(x["sulfate"], x["nitrate"], use="na.or.complete"))
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
}
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source("submitscript1.R")
submit()
submit()
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
